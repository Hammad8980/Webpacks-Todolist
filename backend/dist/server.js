(()=>{"use strict";var e={37:e=>{e.exports=require("mongoose")},229:function(e,t,s){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=o(s(252)),n=o(s(577)),r=o(s(818)),i=o(s(804)),d=o(s(740)),u=s(510),p=s(348);r.default.config();const c=(0,a.default)(),l=parseInt(process.env.PORT||"5000",10);(0,i.default)(),c.use((0,n.default)()),c.use(a.default.json()),(0,p.setupSwagger)(c),c.get("/health",(e,t)=>{t.status(200).json({status:"OK",timestamp:(new Date).toISOString(),uptime:process.uptime(),environment:"production"})}),c.get("/",(e,t)=>{t.json({message:"Todo List API is running!",documentation:"/api-docs",endpoints:{getTasks:"GET /api/tasks",createTask:"POST /api/tasks",updateTask:"PUT /api/tasks/:id",toggleTask:"PATCH /api/tasks/:id/toggle",deleteTask:"DELETE /api/tasks/:id"}})}),c.use("/api",d.default),c.use(u.notFound),c.use(u.errorHandler),c.listen(l,()=>{console.log(`ðŸš€ Server running on http://localhost:${l}`)}),t.default=c},252:e=>{e.exports=require("express")},320:e=>{e.exports=require("swagger-ui-express")},348:function(e,t,s){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.swaggerUi=t.specs=void 0,t.setupSwagger=function(e){e.use("/api-docs",n.default.serve,n.default.setup(d,{customCss:".swagger-ui .topbar { display: none }",customSiteTitle:"Todo List API Documentation"}))};const a=o(s(450)),n=o(s(320));t.swaggerUi=n.default;const r=o(s(928)),i={definition:{openapi:"3.0.0",info:{title:"Todo List API",version:"1.0.0",description:"A simple and elegant Todo List API built with Express.js and MongoDB",contact:{name:"API Support",email:"support@todoapi.com"}},servers:[{url:"https://your-production-url.com/api",description:"Production server"}],components:{schemas:{Task:{type:"object",required:["title","isCompleted","priority"],properties:{_id:{type:"string",description:"The auto-generated id of the task",example:"64f123abc456def789012345"},title:{type:"string",description:"The title of the task",example:"Complete project documentation"},isCompleted:{type:"boolean",description:"Whether the task is completed",example:!1},priority:{type:"string",enum:["p1","p2","p3"],description:"Priority level of the task (p1: High, p2: Medium, p3: Low)",example:"p2"},createdAt:{type:"string",format:"date-time",description:"Task creation timestamp",example:"2023-12-07T10:30:00.000Z"},updatedAt:{type:"string",format:"date-time",description:"Task last update timestamp",example:"2023-12-07T10:30:00.000Z"}}}},responses:{NotFound:{description:"Resource not found",content:{"application/json":{schema:{$ref:"#/components/schemas/Error"}}}},ValidationError:{description:"Validation error",content:{"application/json":{schema:{$ref:"#/components/schemas/Error"}}}},ServerError:{description:"Internal server error",content:{"application/json":{schema:{$ref:"#/components/schemas/Error"}}}}}}},apis:[r.default.join(__dirname,"../routes/*.ts"),r.default.join(__dirname,"../controllers/*.ts"),r.default.join(__dirname,"../index.ts")]},d=(0,a.default)(i);t.specs=d},450:e=>{e.exports=require("swagger-jsdoc")},510:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.notFound=t.errorHandler=void 0,t.errorHandler=(e,t,s,o)=>{const a=e.statusCode||500,n=e.message||"Something went wrong";s.status(a).json({message:n})},t.notFound=(e,t,s)=>{t.status(404).json({message:`Route ${e.originalUrl} not found`})}},577:e=>{e.exports=require("cors")},740:function(e,t,s){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=o(s(252)),n=s(778),r=a.default.Router();r.get("/tasks",n.getTasks),r.post("/tasks",n.createTask),r.put("/tasks/:id",n.updateTask),r.patch("/tasks/:id/toggle",n.toggleTask),r.delete("/tasks/:id",n.deleteTask),t.default=r},778:function(e,t,s){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.deleteTask=t.toggleTask=t.updateTask=t.createTask=t.getTasks=void 0;const a=o(s(926));t.getTasks=async(e,t)=>{try{const e=await a.default.find();t.json(e)}catch(e){t.status(500).json({message:e.message})}},t.createTask=async(e,t)=>{try{const{title:s,isCompleted:o=!1,priority:n="p2"}=e.body,r=await a.default.create({id:Date.now(),title:s,isCompleted:o,priority:n});t.status(201).json(r)}catch(e){t.status(400).json({message:e.message})}},t.updateTask=async(e,t)=>{try{const{id:s}=e.params,o=e.body,n=await a.default.findOneAndUpdate({id:parseInt(s)},o,{new:!0});if(!n)return t.status(404).json({message:"Task not found"});t.json(n)}catch(e){t.status(400).json({message:e.message})}},t.toggleTask=async(e,t)=>{try{const{id:s}=e.params,o=await a.default.findOne({id:parseInt(s)});if(!o)return t.status(404).json({message:"Task not found"});o.isCompleted=!o.isCompleted;const n=await o.save();t.json(n)}catch(e){t.status(400).json({message:e.message})}},t.deleteTask=async(e,t)=>{try{const{id:s}=e.params;if(!await a.default.findOneAndDelete({id:parseInt(s)}))return t.status(404).json({message:"Task not found"});t.json({message:"Task deleted successfully"})}catch(e){t.status(400).json({message:e.message})}}},804:function(e,t,s){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.connectDB=void 0;const a=o(s(37));o(s(818)).default.config();const n=process.env.MONGO_URI||"mongodb://localhost:27017/todolist";t.connectDB=async()=>{try{const e=await a.default.connect(n);console.log(`MongoDB Connected: ${e.connection.host}`)}catch(e){console.error("Error connecting to MongoDB:",e),process.exit(1)}},t.default=t.connectDB},818:e=>{e.exports=require("dotenv")},926:function(e,t,s){var o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0});const a=o(s(37)),n=new a.default.Schema({id:{type:Number,required:!0,unique:!0},title:{type:String,required:!0,trim:!0},isCompleted:{type:Boolean,required:!0,default:!1},priority:{type:String,enum:["p1","p2","p3"],default:"p1"}},{timestamps:!0});t.default=a.default.model("Task",n)},928:e=>{e.exports=require("path")}},t={};!function s(o){var a=t[o];if(void 0!==a)return a.exports;var n=t[o]={exports:{}};return e[o].call(n.exports,n,n.exports,s),n.exports}(229)})();